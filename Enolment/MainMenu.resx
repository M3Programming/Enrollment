<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hDRSoZAD0/8BJMBzHPSPCTwAAAAASUVORK5CYII=
</value>
  </data>
</root>